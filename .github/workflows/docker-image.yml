name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Docker layers
        uses: actions/cache@master
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

  build-dev:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Check out the source code
        uses: actions/checkout@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push dev docker image
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile.dev
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-react:dev
          push: true

  test-dev:
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Test the dev docker image
        run: docker run -e CI=true ${{ secrets.DOCKERHUB_USERNAME }}/docker-react:dev npm run test a

  build-release:
    runs-on: ubuntu-latest
    needs: test-dev
    steps:
      - name: Check out the source code
        uses: actions/checkout@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push release docker image
        uses: docker/build-push-action@master
        with:
          context: .
          file: Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-react:latest
          push: true

  deploy:
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - name: Make the deployment package
        run: zip deploy.zip Dockerrun.aws.json

      - name: Deploy to aws beantalk
        uses: einaregilsson/beanstalk-deploy@master
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: docker-react
          environment_name: Dockerreact-env
          version_label: 1
          region: us-east-1
          deployment_package: deploy.zip